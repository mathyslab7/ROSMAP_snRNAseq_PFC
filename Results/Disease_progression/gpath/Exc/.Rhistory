mat = data[["RNA"]]$counts,
dir = paste0(output.dir, gsub(".rds", "", files.set[[i]]), "_BP"),
overwrite = TRUE
)
# Load in BP matrices
mat <- open_matrix_dir(dir = paste0(output.dir, gsub(".rds", "", files.set[[i]]), "_BP"))
# Get metadata
metadata.list[[i]] <- data@meta.data
data.list[[i]] <- mat
data_name= files.set[i]
data_name= gsub("PFC465_DecontX_|.rds", "", data_name)
# Name layers
names(data.list)[[i]] <- data_name
}
metadata <- Reduce(rbind, metadata.list)
t1= length(na.omit(metadata$projid))
#total no. of cells 1638882
#total no. of cells with projid info 1574130
merged.object <- CreateSeuratObject(counts = data.list, meta.data = metadata)
#merged.object<- JoinLayers(merged.object)
merged.object
saveRDS(
object = merged.object,
file = "PFC465_combined_DecontX_V5_seurat_obj.Rds",
destdir = output.dir
)
merged.object
saveRDS(
object = merged.object,
file = "Combined_SEAAD_DecontX_V5_seurat_obj.Rds",
destdir = output.dir
)
#R version 4.2.3 Seurat V5 Beta
library(BPCells)
library(Seurat)
library(SeuratObject)
library(SeuratDisk)
library(Azimuth)
options(Seurat.object.assay.version = "v5")
file.dir <- "G:/SEA_AD/Data/DecontX_data/"
files.set <- list.files(path= file.dir, pattern = "DecontX_Seurat_obj")
# Loop through h5ad files and output BPCells matrices on-disk
data.list <- c()
metadata.list <- c()4242
#R version 4.2.3 Seurat V5 Beta
library(BPCells)
library(Seurat)
library(SeuratObject)
library(SeuratDisk)
library(Azimuth)
options(Seurat.object.assay.version = "v5")
file.dir <- "G:/SEA_AD/Data/DecontX_data/"
files.set <- list.files(path= file.dir, pattern = "DecontX_Seurat_obj")
# Loop through h5ad files and output BPCells matrices on-disk
data.list <- c()
metadata.list <- c()
output.dir <- "G:/SEA_AD/Data/DecontX_V5_data/"
for (i in 1:length(files.set)) {
path <- paste0(file.dir, files.set[i])
data <- readRDS(path)
write_matrix_dir(
mat = data[["RNA"]]$counts,
dir = paste0(output.dir, gsub(".rds", "", files.set[[i]]), "_BP"),
overwrite = TRUE
)
# Load in BP matrices
mat <- open_matrix_dir(dir = paste0(output.dir, gsub(".rds", "", files.set[[i]]), "_BP"))
# Get metadata
metadata.list[[i]] <- data@meta.data
data.list[[i]] <- mat
data_name= files.set[i]
data_name= gsub("PFC465_DecontX_|.rds", "", data_name)
# Name layers
names(data.list)[[i]] <- data_name
}
metadata <- Reduce(rbind, metadata.list)
t1= length(na.omit(metadata$projid))
#total no. of cells 1638882
#total no. of cells with projid info 1574130
merged.object <- CreateSeuratObject(counts = data.list, meta.data = metadata)
#merged.object<- JoinLayers(merged.object)
merged.object
saveRDS(
object = merged.object,
file = "Combined_SEAAD_DecontX_V5_seurat_obj.Rds",
destdir = output.dir
)
#1378211 cells
merged.object
#R version 4.2.3 Seurat V5 Beta
library(BPCells)
library(Seurat)
library(SeuratObject)
library(SeuratDisk)
library(Azimuth)
options(Seurat.object.assay.version = "v5")
file.dir <- "G:/SEA_AD/Data/DecontX_data/"
files.set <- list.files(path= file.dir, pattern = "DecontX_Seurat_obj")
# Loop through h5ad files and output BPCells matrices on-disk
data.list <- c()
metadata.list <- c()
output.dir <- "G:/SEA_AD/Data/DecontX_V5_data/"
for (i in 1:length(files.set)) {
path <- paste0(file.dir, files.set[i])
data <- readRDS(path)
write_matrix_dir(
mat = data[["RNA"]]$counts,
dir = paste0(output.dir, gsub(".Rds", "", files.set[[i]]), "_BP"),
overwrite = TRUE
)
# Load in BP matrices
mat <- open_matrix_dir(dir = paste0(output.dir, gsub(".Rds", "", files.set[[i]]), "_BP"))
# Get metadata
metadata.list[[i]] <- data@meta.data
data.list[[i]] <- mat
data_name= files.set[i]
data_name= gsub("PFC465_DecontX_|.Rds", "", data_name)
# Name layers
names(data.list)[[i]] <- data_name
}
metadata <- Reduce(rbind, metadata.list)
t1= length(na.omit(metadata$projid))
#total no. of cells 1638882
#total no. of cells with projid info 1574130
merged.object <- CreateSeuratObject(counts = data.list, meta.data = metadata)
#merged.object<- JoinLayers(merged.object)
merged.object
saveRDS(
object = merged.object,
file = "Combined_SEAAD_DecontX_V5_seurat_obj.Rds",
destdir = output.dir
)
#1378211 cells
library(BPCells)
library(Seurat)
library(SeuratObject)
library(SeuratDisk)
library(Azimuth)
options(Seurat.object.assay.version = "v5")
file.dir <- "G:/SEA_AD/Data/DecontX_data/"
files.set <- list.files(path= file.dir, pattern = "DecontX_Seurat_obj")
# Loop through h5ad files and output BPCells matrices on-disk
data.list <- c()
metadata.list <- c()
output.dir <- "G:/SEA_AD/Data/DecontX_V5_data/"
path <- paste0(file.dir, files.set[1])
paste0(output.dir, gsub(".Rds", "", files.set[[i]]), "_BP")
paste0(output.dir, gsub(".Rds", "", files.set[[1]]), "_BP")
filename <- gsub(".", "", files.set[1])
filename <- gsub(".", "_", files.set[1])
filename <- gsub(".", "_", files.set[[1]])
filename <- gsub("\\.", "_", files.set[[1]])
filename
paste0(output.dir, gsub(".Rds", "", filename), "_BP")
paste0(output.dir, gsub(".Rds", "", filename), "_BP")
data_name= gsub("DecontX_Seurat_obj_|Rds", "", data_name)
data_name= gsub("DecontX_Seurat_obj_|Rds", "", filename)
data_name
data_name= gsub("DecontX_Seurat_obj_|_Rds", "", filename)
data_name
#R version 4.2.3 Seurat V5 Beta
library(BPCells)
library(Seurat)
library(SeuratObject)
library(SeuratDisk)
library(Azimuth)
options(Seurat.object.assay.version = "v5")
file.dir <- "G:/SEA_AD/Data/DecontX_data/"
files.set <- list.files(path= file.dir, pattern = "DecontX_Seurat_obj")
# Loop through h5ad files and output BPCells matrices on-disk
data.list <- c()
metadata.list <- c()
output.dir <- "G:/SEA_AD/Data/DecontX_data_V5/"
for (i in 1:length(files.set)) {
path <- paste0(file.dir, files.set[i])
data <- readRDS(path)
filename <- gsub("\\.", "_", files.set[[i]])
write_matrix_dir(
mat = data[["RNA"]]$counts,
dir = paste0(output.dir, gsub(".Rds", "", filename), "_BP"),
overwrite = TRUE
)
# Load in BP matrices
mat <- open_matrix_dir(dir = paste0(output.dir, gsub(".Rds", "", filename), "_BP"))
# Get metadata
metadata.list[[i]] <- data@meta.data
data.list[[i]] <- mat
data_name= gsub("DecontX_Seurat_obj_|_Rds", "", filename)
# Name layers
names(data.list)[[i]] <- data_name
}
metadata <- Reduce(rbind, metadata.list)
t1= length(na.omit(metadata$projid))
#total no. of cells 1638882
#total no. of cells with projid info 1574130
merged.object <- CreateSeuratObject(counts = data.list, meta.data = metadata)
#merged.object<- JoinLayers(merged.object)
merged.object
saveRDS(
object = merged.object,
file = "Combined_SEAAD_DecontX_V5_seurat_obj.Rds",
destdir = output.dir
)
#1378211 cells
merged.object
library(BPCells)
library(Seurat)
library(SeuratObject)
library(SeuratDisk)
library(Azimuth)
options(Seurat.object.assay.version = "v5")
file.dir <- "G:/SEA_AD/Data/DecontX_data/Combined_by_cell_classes/"
files.set <- list.files(path= file.dir, pattern = "SEAAD_DecontX_")
files.set
# Loop through h5ad files and output BPCells matrices on-disk
data.list <- c()
metadata.list <- c()
output.dir <- "G:/SEA_AD/Data/DecontX_data_V5/"
for (i in 1:length(files.set)) {
path <- paste0(file.dir, files.set[i])
data <- readRDS(path)
filename <- gsub("\\.", "_", files.set[[i]])
write_matrix_dir(
mat = data[["RNA"]]$counts,
dir = paste0(output.dir, gsub(".rds", "", filename), "_BP"),
overwrite = TRUE
)
# Load in BP matrices
mat <- open_matrix_dir(dir = paste0(output.dir, gsub(".rds", "", filename), "_BP"))
# Get metadata
metadata.list[[i]] <- data@meta.data
data.list[[i]] <- mat
data_name= gsub("SEAAD_DecontX_|_rds", "", filename)
# Name layers
names(data.list)[[i]] <- data_name
}
metadata <- Reduce(rbind, metadata.list)
merged.object <- CreateSeuratObject(counts = data.list, meta.data = metadata)
#merged.object<- JoinLayers(merged.object)
merged.object
saveRDS(
object = merged.object,
file = "Combined_SEAAD_DecontX_V5_seurat_obj.Rds",
destdir = output.dir
)
library(Seurat)
library(dplyr)
library(ggplot2)
library(limma)
library(muscat)
library(purrr)
library(scater)
library(RUVSeq)
library(zebrafishRNASeq)
options(Seurat.object.assay.version = 'v5')
#Indicate name of the variable analyzed
variable <- "gpath"
dir <- paste0("G:/PFC_429_final_Spring2021/Vanshika/muscat_DecontX/Results_Disease_progression_Trio/", variable)
dir.create(dir)
# Read PFC427 DecontX V5 Seurat object
setwd("G:/PFC_429_final_Spring2021/Data/Data_DecontX_V5")
PFC427 <- readRDS("PFC427_combined_DecontX_V5_seurat_obj.Rds")
PFC427 <- JoinLayers(PFC427)
PFC427
metadata <- PFC427@meta.data
setwd("G:/ROSMAP_snRNAseq_deJager/Analysis/cell_fraction_analysis/Data")
Neuron_subclass_anno <- read.csv("PFC_Exc_Inh_subclass_assignment.csv")
metadata_new <- left_join(metadata, Neuron_subclass_anno, by= "cell_type_high_resolution")
row.names(metadata_new) <- row.names(metadata)
metadata_new <- metadata_new[, c("cellBarcode","batch","batch_annotation","projid",
"cell_type_high_resolution","major_cell_type","subclass_labels")]
#metadata_new <- metadata_new %>% mutate(subclass_labels = coalesce(subclass_labels, cell_type_high_resolution))
celltype_check <- unique(metadata_new[,c(5:7)])
setwd("G:/PFC_429_final_Spring2021/Vanshika")
Off_metadata <- read.csv("dataset_652_basic_04-23-2020.csv") #Add official metadata
Off_metadata <- Off_metadata %>%
mutate(AD = case_when(niareagansc == 1 ~ 1,
niareagansc == 2 ~ 1,
niareagansc == 3 ~ 0,
niareagansc == 4 ~ 0))
CRscores <- read.csv("CR_scores.csv") #Add CR score variables
tangle_CRscores <- read.csv("PFC427_tangles_CR_score.csv") #Add tangle CR score variables
CDRscores <- read.csv("PFC427_CDR_scores.csv") #Add CDR score variables
Off_metadata <- left_join(CRscores, Off_metadata, by= "projid")
Off_metadata <- left_join(Off_metadata, tangle_CRscores, by= "projid")
Off_metadata <- left_join(Off_metadata, CDRscores, by= "projid")
#combined metadata
metadata_new <- left_join(metadata_new, Off_metadata, by= "projid")
row.names(metadata_new) <- row.names(metadata)
PFC427 <- AddMetaData(PFC427, metadata = metadata_new)
#downsample only for Exc
Idents(PFC427)= "major_cell_type"
PFC427 <- subset(PFC427, idents = "Exc")
#remove unwanted celltypes
Idents(PFC427)= "cell_type_high_resolution"
PFC427 <- subset(PFC427, idents = c("Exc NRGN","Exc RELN CHD7"), invert = TRUE)
PFC427 <- subset(PFC427, downsample = 100000)
View(PFC427)
#trio_second_vs_first
pbmc <- PFC427
Combined_metadata <- pbmc@meta.data
Combined_metadata <- Combined_metadata[,c("projid", "gpath")]
#define gpath_trios
MD <- unique(Combined_metadata[,c("projid", "gpath")])
trio_1 <- quantile(MD[,"gpath"], prob=c(0.333), na.rm= T)
trio_2 <- quantile(MD[,"gpath"], prob=c(0.666), na.rm= T)
MD <- MD %>% mutate(gpath_trio = case_when(gpath <= trio_1 ~ "1",
gpath > trio_1 & gpath <= trio_2 ~ "2",
gpath > trio_2 ~ ""))
MD$gpath_trio <- as.numeric(MD$gpath_trio)
MD <- MD[,-2, drop=F]
New_metadata <- left_join(Combined_metadata, MD, by= "projid")
row.names(New_metadata) <- row.names(Combined_metadata)
pbmc <- AddMetaData(pbmc, metadata = New_metadata)
Idents(pbmc)= "gpath_trio"
pbmc <- subset(pbmc, idents = c("1","2"))
#################
#Split into individual cell types
Idents(pbmc) <- "major_cell_type"
celltypes <- na.omit(unique(pbmc$major_cell_type))
#remove celltypes with less than 1000 cells
celltypes_filtered <- data.frame(table(pbmc$major_cell_type))
celltypes_filtered <- subset(celltypes_filtered, celltypes_filtered$Freq <1000)
celltypes <- celltypes[! celltypes %in% celltypes_filtered$Var1]
for (j in 1:length(celltypes)){
pbmc_sub <- subset(pbmc, idents = celltypes[[j]])
celltype <- celltypes[[j]]
DefaultAssay(pbmc_sub) <- "RNA"
pbmc_sub[["RNA"]]$counts <- as(pbmc_sub[["RNA"]]$counts, Class = "dgCMatrix") #load on working memory
pbmc.sce <- as.SingleCellExperiment(pbmc_sub)
rm(pbmc_sub)
# remove undetected genes
pbmc.sce <- pbmc.sce[rowSums(counts(pbmc.sce) > 0) > 0, ]
dim(pbmc.sce)
# remove lowly expressed genes
pbmc.sce <- pbmc.sce[rowSums(counts(pbmc.sce) > 1) >= 10, ]
dim(pbmc.sce)
sce <- prepSCE(pbmc.sce,
kid = "major_cell_type", # subpopulation assignments
gid = "AD",  # group IDs (ctrl/stim)
sid = "projid",   # sample IDs (ctrl/stim.1234)
drop = FALSE)  # dr
nk <- length(kids <- levels(sce$cluster_id))
ns <- length(sids <- levels(sce$sample_id))
names(kids) <- kids; names(sids) <- sids
#t(table(sce$cluster_id, sce$sample_id))
pb <- aggregateData(sce,
assay = "counts", fun = "sum",
by = c("cluster_id", "sample_id"))
assayNames(pb)
#t(head(assay(pb)))
rm(sce)
rm(pbmc.sce)
#################
#define initial formula
formula <- ~gpath_trio+ pmi+ age_death+ msex
cd <- as.data.frame(colData(pb))
cd2 <- cd[,c("gpath_trio","pmi","age_death","msex")]
design <- model.matrix(formula,cd2)
pb2 <- pb[,rownames(design)]
#################
#estimate unwanted vaiations using RUVseq
counts <- pb2@assays@data@listData[[celltype]]
genes <- rownames(counts)
gpath_trio <- pb2@colData@listData[["gpath_trio"]]
set <- newSeqExpressionSet(as.matrix(counts),
phenoData = data.frame(gpath_trio, row.names=pb2@colData@rownames))
set
design <- model.matrix(~gpath_trio, data=pData(set))
y <- DGEList(counts=counts(set))
y <- calcNormFactors(y, method="TMM")
y <- estimateGLMCommonDisp(y, design)
y <- estimateGLMTagwiseDisp(y, design)
fit <- glmFit(y, design)
res <- residuals(fit, type="deviance")
set4 <- RUVr(set, genes, k=10, res)
w=pData(set4)
pb2$w_1 <- w$W_1
pb2$w_2 <- w$W_2
pb2$w_3 <- w$W_3
pb2$w_4 <- w$W_4
pb2$w_5 <- w$W_5
pb2$w_6 <- w$W_6
pb2$w_7 <- w$W_7
pb2$w_8 <- w$W_8
pb2$w_9 <- w$W_9
pb2$w_10 <- w$W_10
#################
#muscat DE analysis
formula <- ~gpath_trio+pmi+age_death+msex+w_1+w_2+w_3+w_4+w_5+w_6+w_7+w_8+w_9+w_10
cd <- as.data.frame(colData(pb2))
cd2 <- cd[,c("gpath_trio","pmi","age_death","msex","w_1","w_2","w_3","w_4","w_5","w_6","w_7","w_8","w_9","w_10")]
design <- model.matrix(formula,cd2)
res <- pbDS(pb2,design = design,coef=as.list(2:4))
celltype <- gsub("/", "_", celltype)
#Define output directory
outdir <- paste0(dir, "/" , celltype)
dir.create(outdir)
setwd(outdir)
tbl <- res$table[[1]]
DEG_tbl <- tbl[[1]]
filename <- paste0(celltype,"_",variable,"_trio_second_vs_first.csv")
write.csv(DEG_tbl, file= filename)
}
###############################################################
###############################################################
#trio_third_vs_second
pbmc <- PFC427
Combined_metadata <- pbmc@meta.data
Combined_metadata <- Combined_metadata[,c("projid", "gpath")]
#define gpath_trios
MD <- unique(Combined_metadata[,c("projid", "gpath")])
trio_1 <- quantile(MD[,"gpath"], prob=c(0.333), na.rm= T)
trio_2 <- quantile(MD[,"gpath"], prob=c(0.666), na.rm= T)
MD <- MD %>% mutate(gpath_trio = case_when(gpath <= trio_1 ~ "",
gpath > trio_1 & gpath <= trio_2 ~ "1",
gpath > trio_2 ~ "2"))
MD$gpath_trio <- as.numeric(MD$gpath_trio)
MD <- MD[,-2, drop=F]
New_metadata <- left_join(Combined_metadata, MD, by= "projid")
row.names(New_metadata) <- row.names(Combined_metadata)
pbmc <- AddMetaData(pbmc, metadata = New_metadata)
Idents(pbmc)= "gpath_trio"
pbmc <- subset(pbmc, idents = c("1","2"))
#################
#Split into individual cell types
Idents(pbmc) <- "major_cell_type"
celltypes <- na.omit(unique(pbmc$major_cell_type))
#remove celltypes with less than 1000 cells
celltypes_filtered <- data.frame(table(pbmc$major_cell_type))
celltypes_filtered <- subset(celltypes_filtered, celltypes_filtered$Freq <1000)
celltypes <- celltypes[! celltypes %in% celltypes_filtered$Var1]
for (j in 1:length(celltypes)){
pbmc_sub <- subset(pbmc, idents = celltypes[[j]])
celltype <- celltypes[[j]]
DefaultAssay(pbmc_sub) <- "RNA"
pbmc_sub[["RNA"]]$counts <- as(pbmc_sub[["RNA"]]$counts, Class = "dgCMatrix") #load on working memory
pbmc.sce <- as.SingleCellExperiment(pbmc_sub)
rm(pbmc_sub)
# remove undetected genes
pbmc.sce <- pbmc.sce[rowSums(counts(pbmc.sce) > 0) > 0, ]
dim(pbmc.sce)
# remove lowly expressed genes
pbmc.sce <- pbmc.sce[rowSums(counts(pbmc.sce) > 1) >= 10, ]
dim(pbmc.sce)
sce <- prepSCE(pbmc.sce,
kid = "major_cell_type", # subpopulation assignments
gid = "AD",  # group IDs (ctrl/stim)
sid = "projid",   # sample IDs (ctrl/stim.1234)
drop = FALSE)  # dr
nk <- length(kids <- levels(sce$cluster_id))
ns <- length(sids <- levels(sce$sample_id))
names(kids) <- kids; names(sids) <- sids
#t(table(sce$cluster_id, sce$sample_id))
pb <- aggregateData(sce,
assay = "counts", fun = "sum",
by = c("cluster_id", "sample_id"))
assayNames(pb)
#t(head(assay(pb)))
rm(sce)
rm(pbmc.sce)
#################
#define initial formula
formula <- ~gpath_trio+ pmi+ age_death+ msex
cd <- as.data.frame(colData(pb))
cd2 <- cd[,c("gpath_trio","pmi","age_death","msex")]
design <- model.matrix(formula,cd2)
pb2 <- pb[,rownames(design)]
#################
#estimate unwanted vaiations using RUVseq
counts <- pb2@assays@data@listData[[celltype]]
genes <- rownames(counts)
gpath_trio <- pb2@colData@listData[["gpath_trio"]]
set <- newSeqExpressionSet(as.matrix(counts),
phenoData = data.frame(gpath_trio, row.names=pb2@colData@rownames))
set
design <- model.matrix(~gpath_trio, data=pData(set))
y <- DGEList(counts=counts(set))
y <- calcNormFactors(y, method="TMM")
y <- estimateGLMCommonDisp(y, design)
y <- estimateGLMTagwiseDisp(y, design)
fit <- glmFit(y, design)
res <- residuals(fit, type="deviance")
set4 <- RUVr(set, genes, k=10, res)
w=pData(set4)
pb2$w_1 <- w$W_1
pb2$w_2 <- w$W_2
pb2$w_3 <- w$W_3
pb2$w_4 <- w$W_4
pb2$w_5 <- w$W_5
pb2$w_6 <- w$W_6
pb2$w_7 <- w$W_7
pb2$w_8 <- w$W_8
pb2$w_9 <- w$W_9
pb2$w_10 <- w$W_10
#################
#muscat DE analysis
formula <- ~gpath_trio+pmi+age_death+msex+w_1+w_2+w_3+w_4+w_5+w_6+w_7+w_8+w_9+w_10
cd <- as.data.frame(colData(pb2))
cd2 <- cd[,c("gpath_trio","pmi","age_death","msex","w_1","w_2","w_3","w_4","w_5","w_6","w_7","w_8","w_9","w_10")]
design <- model.matrix(formula,cd2)
res <- pbDS(pb2,design = design,coef=as.list(2:4))
celltype <- gsub("/", "_", celltype)
#Define output directory
outdir <- paste0(dir, "/" , celltype)
dir.create(outdir)
setwd(outdir)
tbl <- res$table[[1]]
DEG_tbl <- tbl[[1]]
filename <- paste0(celltype,"_",variable,"_trio_third_vs_second.csv")
write.csv(DEG_tbl, file= filename)
}
