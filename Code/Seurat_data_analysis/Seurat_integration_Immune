library(Seurat)
adata <- ReadH5AD(file = "Immune_raw.h5ad")
pbmc <- CreateSeuratObject(counts = GetAssayData(object = adata, slot = 'counts'), project = "pbmc3k", min.cells = 0, min.features = 0)
pbmc=AddMetaData(pbmc,adata@meta.data)
rm(adata)
library(patchwork)
pbmc.list <- SplitObject(pbmc, split.by = "batch.annotation")
for (i in names(pbmc.list)) {
  pbmc.list[[i]] <- SCTransform(pbmc.list[[i]], verbose = FALSE,variable.features.n=5000)
}
pbmc.features <- SelectIntegrationFeatures(object.list = pbmc.list, nfeatures = 5000)
pbmc.list <- PrepSCTIntegration(object.list = pbmc.list, anchor.features = pbmc.features)
options(future.globals.maxSize = 20000 * 1024^2)
rm(pbmc)
k.filter <- min(200, min(sapply(pbmc.list, ncol)))
pbmc.anchors <- FindIntegrationAnchors(object.list = pbmc.list, normalization.method = "SCT",anchor.features = pbmc.features,reference = c(2,3,4,5),k.filter = k.filter,verbose = FALSE)
pbmc.integrated <- IntegrateData(anchorset = pbmc.anchors, normalization.method = "SCT")
pbmc.integrated <- RunPCA(object = pbmc.integrated, verbose = FALSE)
pbmc.integrated <- RunUMAP(object = pbmc.integrated, dims = 1:10,n.neighbors = 100,min.dist=0.1)
pbmc.integrated <- FindNeighbors(pbmc.integrated, dims = 1:10, verbose = FALSE)
pbmc.integrated <- FindClusters(pbmc.integrated, verbose = FALSE,resolution=0.1,algorithm=4,weights=T,method='igraph')
saveRDS(pbmc.integrated,file="Immune_integrated_batch_5000.rds")

pbmc.integrated <- FindClusters(pbmc.integrated, verbose = FALSE,resolution=0.15,algorithm=4,weights=T,method='igraph')
saveRDS(pbmc.integrated,file="Immune_integrated_batch_5000.rds")


########################################################################################
library(Seurat)
library(SeuratDisk)
library(ggplot2)
library(patchwork)

pbmc=readRDS("Mic_integrated2_leiden.rds")
DefaultAssay(pbmc)<-"RNA"
pbmc <- NormalizeData(pbmc, normalization.method = "LogNormalize", scale.factor = 10000)
addition=read.table("Mic_Metadata2_addition_cell_type_highres.txt",header=TRUE,row.names=1,sep="\t")
pbmc=AddMetaData(pbmc,addition)
Idents(pbmc)<-"cell_type_high_resolution"

reference=pbmc
reference <- FindVariableFeatures(reference, selection.method = "vst", nfeatures = 2000)
reference <- ScaleData(reference)
reference <- RunPCA(reference)

pbmc <- readRDS(file = "Immune_integrated_batch_5000.rds")
DefaultAssay(pbmc)<-"RNA"

anchors <- FindTransferAnchors(
  reference = reference,
  query = pbmc,
  normalization.method = "LogNormalize",
  reference.reduction = "pca",
  dims = 1:50
)

pbmc <- TransferData(
  anchorset = anchors,
  reference = reference,
  query = pbmc,
  refdata = list(
    celltype = "cell_type_high_resolution")
)

setwd("/media/hansruedi/12TB_HD/PFC_429_12TB/Clean4")
saveRDS(pbmc,file="Immune_integrated_batch_5000_predicted.rds")


########################################################################################
library(Seurat)
pbmc <- readRDS(file = "Immune_integrated_batch_5000_predicted.rds")
DimPlot(pbmc)
DefaultAssay(pbmc)<-"RNA"
pbmc=NormalizeData(pbmc)
pbmc.markers <- FindAllMarkers(pbmc, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25,max.cells.per.ident = 1000)
write.csv(pbmc.markers,file="Marker_genes_Immune_seurat_clusters")
write.csv(pbmc@meta.data,file="Immune_integrated_batch_5000_predicted_metadata.csv")
addition=read.table("Immune_integrated_batch_5000_predicted_metadata_addition_scanpy.txt",header=TRUE,row.names=1,sep="\t")
pbmc=AddMetaData(pbmc,addition)
Idents(pbmc)<-"cell_type_high_resolution"
DimPlot(pbmc,label=TRUE)
saveRDS(pbmc,file="Immune_integrated_batch_5000_predicted_final.rds")
